Лабораторна робота №7. Функції

Коломійцев В.О. , гр. КН-922Б 

Завдання: 
1.Переробити програми, що були розроблені під час виконання лабораторних робіт з тем "Масиви" та "Цикли" таким чином, щоб використовувалися функції для обчислення результату.

2.Функції повинні задовольняти основну їх причетність - уникати дублювання коду. 
Тому, для демонстрації роботи, ваша програма (функція main()) повинна мати можливість викликати розроблену функцію з різними вхідними даними.

3.Слід звернути увагу: параметри одного з викликів функції повинні бути згенеровані за допомогою генератора псевдовипадкових чисел random().

4.Слід звернути увагу (#2): продемонструвати встановлення вхідних даних через аргументи додатка (параметри командної строки). 
Обробити випадок, коли дані не передались - у цьому випадку вони матимуть значення за умовчуванням, обраними розробником. 

Основна частина:

===========================(Вміст файлу "main.c")===============================================================================

#include <stdio.h>
#include <stdlib.h>
#include <time.h>// чтобы использовать функцию time()
#include "lib.h"

int main(int argc, char *argv[])
{
    //Змінна t - для функції lab06 і для запису аргументів через командний рядок
    //Змінна x та y - діапазон у якому потрібно шукати прості чила у функції lab05
    long int t = 5000;
    int x,y;
    char *c;
     
    //Примушує функцію rand() завжди генерувати рандомне число  
    srand((unsigned int)time(NULL));
    x = rand() % 100; 
    y = rand() % (x-1);    
    lab05(x, y);   
    
    //Перевірка чи вводили ми якісь аргументи в командному рядку
    if(argc > 1)
    {
      t = strtol(argv[1], &c, 10);
      if(t > 1000 && t < 9999)
      {
        lab06(t);
      }

    }else
      {      
        lab06(t);      
      }
    
    return 0;
}

===========================(Вміст файлу "lib.c")===============================================================================

#include<stdio.h>

void lab05(a, b)
{
   int i, max = 0;//Задаємо макісмальне число
   
   while(a > b)//Запуск циклу для перевірки чисел у встановленому діапазоні
   {
       b++;
       i = 2;
       while(b%i != 0)//Запуск циклу для того, щоб дізнатися число просте чи ні 
       {
           i++;
       }
       if(b == i && b > max)
       {
          max = b;      
       }      
   }
   
}

void lab06(k)
{
    //Масив А в який записуватимемо щасливі квитки.
    //Задаємо змінні sum1 і sum2 в яких буде зберігатися суми першої і другої пари чисел. 
    //Змінні n1, n2, n3, n4 зберігатимуть по одному числу з номера квитка. 
    //Змінна n – це кількість щасливих квитків.
    int A[9999],sum1,sum2,n1,n2,n3,n4,n = 0,i;
    

    //Цикл перевіряє всі квитки від k до 9999
    while( k <= 9999)
    {
        //Розбиваємо номер квитка на 4 числа
        n1 = k/1000;
        n2 = (k/100)%10;
        n3 = (k/10)%10;
        n4 = k%10;
        
        //Дізнаємось суму першої пари чисел і другої
        sum1 = n1 + n2;
        sum2 = n3 + n4;
        
        //Якщо сума першої пари дорівнює сумі другої, то записуємо цей квиток у масив і додаємо 1 до кількості щасливих квитків(n).
        if(sum1 == sum2)
        {
          A[n] = k;
          n++;
        }
        
        k++;
    }
        
}

===========================(Вміст файлу "lib.h")===============================================================================

void lab05(int a, int b);
void lab06(long int k);

===============================================================================================================================

- Дослідження результатів роботи програми,також це дослідження ситуації, коли не були передані аргументи через командний рядок для функції "lab06".
   
 19      }
   20      
-> 21      return 0;
   22   }
   23  
   24   int lab06(k)
(lldb) p max
(int) $0 = 37
(lldb) c
Process 9927 resuming
Process 9927 stopped
* thread #1, name = 'main.bin', stop reason = breakpoint 2.1
    frame #0: 0x00005555555552cd main.bin`lab06(k=10000) at lib.c:48:5
   45           k++;
   46       }
   47       
-> 48       return 0;
   49   }
(lldb) p n
(int) $1 = 335
(lldb) p A
(int[9999]) $2 = {
  [0] = 5005
  [1] = 5014
  [2] = 5023
  [3] = 5032
  [4] = 5041
  [5] = 5050
  [6] = 5106
  [7] = 5115
  [8] = 5124
  [9] = 5133
  [10] = 5142
  [11] = 5151
  [12] = 5160
  [13] = 5207
  [14] = 5216
  [15] = 5225
  [16] = 5234
  [17] = 5243
  [18] = 5252
  [19] = 5261
  [20] = 5270
  ...
}

===============================================================================================================================

- Дослідження результатів роботи програми,коли були передані аргументи через командний рядок для функції "lab06".

┌──(kali㉿kali)-[~/Documents/lab07/dist]
└─$ lldb main.bin 2000

Process 12842 launched: '/home/kali/Documents/lab07/dist/main.bin' (x86_64)
Process 12842 stopped
* thread #1, name = 'main.bin', stop reason = breakpoint 1.1
    frame #0: 0x00005555555552cd main.bin`lab06(k=10000) at lib.c:48:5
   45           k++;
   46       }
   47       
-> 48       return 0;
   49   }
(lldb) p n
(int) $0 = 552
(lldb) p A
(int[9999]) $1 = {
  [0] = 2002
  [1] = 2011
  [2] = 2020
  [3] = 2103
  [4] = 2112
  [5] = 2121
  [6] = 2130
  [7] = 2204
  [8] = 2213
  [9] = 2222
  [10] = 2231
  [11] = 2240
  [12] = 2305
  [13] = 2314
  [14] = 2323
  [15] = 2332
  [16] = 2341
  [17] = 2350
  [18] = 2406
  [19] = 2415
  [20] = 2424
  ...
}

=====================================================(lldb)====================================================================

- Для підтвердження коректності роботи програми, зупинено відлагодник на строці зі змінною "srand((unsigned int)time(NULL));" у файлі main.c та введемо команду "p t = 3000". 
Після вводимо команду "c" і на рядку з "return 0;" у файлі lib.c у функції "lab06" вводимо команду "p n" і "p A" та отримуємо наступне:

    12       char *c;
   13          
-> 14       srand((unsigned int)time(NULL));
   15       x = rand() % 100; 
   16       y = rand() % (x-1);    
   17       lab05(x, y); 
(lldb) p t = 3000
(long) $0 = 3000
(lldb) c
Process 15000 resuming
Process 15000 stopped
* thread #1, name = 'main.bin', stop reason = breakpoint 2.1
    frame #0: 0x00005555555552cd main.bin`lab06(k=10000) at lib.c:48:5
   45           k++;
   46       }
   47       
-> 48       return 0;
   49   }
(lldb) p n
(int) $1 = 483
(lldb) p A
(int[9999]) $2 = {
  [0] = 3003
  [1] = 3012
  [2] = 3021
  [3] = 3030
  [4] = 3104
  [5] = 3113
  [6] = 3122
  [7] = 3131
  [8] = 3140
  [9] = 3205
  [10] = 3214
  [11] = 3223
  [12] = 3232
  [13] = 3241
  [14] = 3250
  [15] = 3306
  [16] = 3315
  [17] = 3324
  [18] = 3333
  [19] = 3342
  [20] = 3351
  ...
}
---------------------------------------------------------------------------- 

Структура проекту лабораторної роботи:
   
├── lab07
│   ├── doc
│   └── lab07.txt
├── Makefile
├── README.md
└── src
    ├── lib.c
    ├── lib.h
    └── main.c

Висновки: під час виконання лабораторної роботи було набуто практичних навичок роботи з функціями мовою С.
